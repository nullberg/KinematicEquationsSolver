/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kes;


import javax.swing.*;
import java.text.*;
import java.awt.Desktop;
import java.io.*;

/**
 *
 * @author Nathan
 */
public class KinematicEquationsSolver extends javax.swing.JFrame {

    /**
     * Creates new form KinematicEquationsSolver
     */
    public KinematicEquationsSolver() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        findButtonGroup = new javax.swing.ButtonGroup();
        appTitleLabel = new javax.swing.JLabel();
        copyrightLabel = new javax.swing.JLabel();
        findPanel = new javax.swing.JPanel();
        findTitleLabel = new javax.swing.JLabel();
        displacementFindRadioButton = new javax.swing.JRadioButton();
        finalVelocityFindRadioButton = new javax.swing.JRadioButton();
        initialVelocityFindRadioButton = new javax.swing.JRadioButton();
        accelerationFindRadioButton = new javax.swing.JRadioButton();
        timeFindRadioButton = new javax.swing.JRadioButton();
        givenPanel = new javax.swing.JPanel();
        givenTitleLabel = new javax.swing.JLabel();
        displacementGivenLabel = new javax.swing.JLabel();
        finalVelocityGivenLabel = new javax.swing.JLabel();
        initialVelocityGivenLabel = new javax.swing.JLabel();
        accelerationGivenLabel = new javax.swing.JLabel();
        timeGivenLabel = new javax.swing.JLabel();
        displacementGivenTextField = new javax.swing.JTextField();
        finalVelocityGivenTextField = new javax.swing.JTextField();
        initialVelocityGivenTextField = new javax.swing.JTextField();
        accelerationGivenTextField = new javax.swing.JTextField();
        timeGivenTextField = new javax.swing.JTextField();
        solveButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        solutionPanel = new javax.swing.JPanel();
        solutionTitleLabel = new javax.swing.JLabel();
        solution1Label = new javax.swing.JLabel();
        solution2Label = new javax.swing.JLabel();
        solution3Label = new javax.swing.JLabel();
        solution4Label = new javax.swing.JLabel();
        instructionsButton = new javax.swing.JButton();
        documentationButton = new javax.swing.JButton();
        otherInfoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KES app");

        appTitleLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        appTitleLabel.setText("Kinematic Equations Solver");

        copyrightLabel.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        copyrightLabel.setText("Â© Nathan Ullberg 2017");

        findPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        findPanel.setPreferredSize(new java.awt.Dimension(180, 300));

        findTitleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        findTitleLabel.setText("Find");

        findButtonGroup.add(displacementFindRadioButton);
        displacementFindRadioButton.setText("Displacement");
        displacementFindRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displacementFindRadioButtonActionPerformed(evt);
            }
        });

        findButtonGroup.add(finalVelocityFindRadioButton);
        finalVelocityFindRadioButton.setText("Final Velocity");
        finalVelocityFindRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalVelocityFindRadioButtonActionPerformed(evt);
            }
        });

        findButtonGroup.add(initialVelocityFindRadioButton);
        initialVelocityFindRadioButton.setText("Initial Velocity");
        initialVelocityFindRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initialVelocityFindRadioButtonActionPerformed(evt);
            }
        });

        findButtonGroup.add(accelerationFindRadioButton);
        accelerationFindRadioButton.setText("Acceleration");
        accelerationFindRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accelerationFindRadioButtonActionPerformed(evt);
            }
        });

        findButtonGroup.add(timeFindRadioButton);
        timeFindRadioButton.setText("Time");
        timeFindRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeFindRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout findPanelLayout = new javax.swing.GroupLayout(findPanel);
        findPanel.setLayout(findPanelLayout);
        findPanelLayout.setHorizontalGroup(
            findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(findPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(findTitleLabel)
                    .addComponent(displacementFindRadioButton)
                    .addComponent(finalVelocityFindRadioButton)
                    .addComponent(initialVelocityFindRadioButton)
                    .addComponent(accelerationFindRadioButton)
                    .addComponent(timeFindRadioButton))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        findPanelLayout.setVerticalGroup(
            findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(findPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findTitleLabel)
                .addGap(18, 18, 18)
                .addComponent(displacementFindRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finalVelocityFindRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(initialVelocityFindRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accelerationFindRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeFindRadioButton)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        givenPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        givenPanel.setPreferredSize(new java.awt.Dimension(180, 300));

        givenTitleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        givenTitleLabel.setText("Given");

        displacementGivenLabel.setText("Displacement");

        finalVelocityGivenLabel.setText("Final Velocity");

        initialVelocityGivenLabel.setText("Initial Velocity");

        accelerationGivenLabel.setText("Acceleration");

        timeGivenLabel.setText("Time");

        displacementGivenTextField.setEnabled(false);
        displacementGivenTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                displacementGivenTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                displacementGivenTextFieldFocusLost(evt);
            }
        });

        finalVelocityGivenTextField.setEnabled(false);
        finalVelocityGivenTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                finalVelocityGivenTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                finalVelocityGivenTextFieldFocusLost(evt);
            }
        });

        initialVelocityGivenTextField.setEnabled(false);
        initialVelocityGivenTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                initialVelocityGivenTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                initialVelocityGivenTextFieldFocusLost(evt);
            }
        });

        accelerationGivenTextField.setEnabled(false);
        accelerationGivenTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                accelerationGivenTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                accelerationGivenTextFieldFocusLost(evt);
            }
        });

        timeGivenTextField.setEnabled(false);
        timeGivenTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                timeGivenTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                timeGivenTextFieldFocusLost(evt);
            }
        });

        solveButton.setText("Solve");
        solveButton.setEnabled(false);
        solveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.setEnabled(false);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout givenPanelLayout = new javax.swing.GroupLayout(givenPanel);
        givenPanel.setLayout(givenPanelLayout);
        givenPanelLayout.setHorizontalGroup(
            givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(givenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(givenTitleLabel)
                    .addGroup(givenPanelLayout.createSequentialGroup()
                        .addComponent(displacementGivenLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displacementGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(givenPanelLayout.createSequentialGroup()
                        .addComponent(finalVelocityGivenLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finalVelocityGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(givenPanelLayout.createSequentialGroup()
                        .addComponent(initialVelocityGivenLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(initialVelocityGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(givenPanelLayout.createSequentialGroup()
                        .addComponent(accelerationGivenLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accelerationGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(givenPanelLayout.createSequentialGroup()
                        .addComponent(timeGivenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(solveButton)
                    .addComponent(resetButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        givenPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {accelerationGivenLabel, displacementGivenLabel, finalVelocityGivenLabel, initialVelocityGivenLabel, timeGivenLabel});

        givenPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {accelerationGivenTextField, displacementGivenTextField, finalVelocityGivenTextField, initialVelocityGivenTextField, timeGivenTextField});

        givenPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {resetButton, solveButton});

        givenPanelLayout.setVerticalGroup(
            givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(givenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(givenTitleLabel)
                .addGap(18, 18, 18)
                .addGroup(givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displacementGivenLabel)
                    .addComponent(displacementGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalVelocityGivenLabel)
                    .addComponent(finalVelocityGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialVelocityGivenLabel)
                    .addComponent(initialVelocityGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accelerationGivenLabel)
                    .addComponent(accelerationGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(givenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeGivenLabel)
                    .addComponent(timeGivenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(solveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        solutionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        solutionPanel.setPreferredSize(new java.awt.Dimension(180, 300));

        solutionTitleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        solutionTitleLabel.setText("Solution");

        javax.swing.GroupLayout solutionPanelLayout = new javax.swing.GroupLayout(solutionPanel);
        solutionPanel.setLayout(solutionPanelLayout);
        solutionPanelLayout.setHorizontalGroup(
            solutionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(solutionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(solutionTitleLabel)
                    .addComponent(solution1Label)
                    .addComponent(solution2Label)
                    .addComponent(solution3Label)
                    .addComponent(solution4Label))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        solutionPanelLayout.setVerticalGroup(
            solutionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(solutionTitleLabel)
                .addGap(18, 18, 18)
                .addComponent(solution1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solution2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solution3Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solution4Label)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        instructionsButton.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        instructionsButton.setText("Instructions");
        instructionsButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        instructionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionsButtonActionPerformed(evt);
            }
        });

        documentationButton.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        documentationButton.setText("Documentation");
        documentationButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        documentationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentationButtonActionPerformed(evt);
            }
        });

        otherInfoButton.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        otherInfoButton.setText("Other info");
        otherInfoButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        otherInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(copyrightLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(findPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(givenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(solutionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(appTitleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(instructionsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(documentationButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(otherInfoButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {findPanel, givenPanel, solutionPanel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {documentationButton, instructionsButton, otherInfoButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appTitleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(instructionsButton)
                            .addComponent(documentationButton)
                            .addComponent(otherInfoButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(solutionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .addComponent(findPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .addComponent(givenPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(copyrightLabel)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {findPanel, givenPanel, solutionPanel});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void displacementFindRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displacementFindRadioButtonActionPerformed
        if (displacementFindRadioButton.isSelected()) {
            displacementGivenTextField.setEnabled(false); displacementGivenTextField.setText("");
            finalVelocityGivenTextField.setEnabled(true);
            initialVelocityGivenTextField.setEnabled(true);
            accelerationGivenTextField.setEnabled(true);
            timeGivenTextField.setEnabled(true);
        }
        resetButton.setEnabled(true);
        disableAccordingly();
        removePosts();
    }//GEN-LAST:event_displacementFindRadioButtonActionPerformed

    private void finalVelocityFindRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalVelocityFindRadioButtonActionPerformed
        if (finalVelocityFindRadioButton.isSelected()) {
            displacementGivenTextField.setEnabled(true);
            finalVelocityGivenTextField.setEnabled(false); finalVelocityGivenTextField.setText("");
            initialVelocityGivenTextField.setEnabled(true);
            accelerationGivenTextField.setEnabled(true);
            timeGivenTextField.setEnabled(true);
        }
        resetButton.setEnabled(true);
        disableAccordingly();
        removePosts();
    }//GEN-LAST:event_finalVelocityFindRadioButtonActionPerformed

    private void initialVelocityFindRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initialVelocityFindRadioButtonActionPerformed
        if (initialVelocityFindRadioButton.isSelected()) {
            displacementGivenTextField.setEnabled(true);
            finalVelocityGivenTextField.setEnabled(true);
            initialVelocityGivenTextField.setEnabled(false); initialVelocityGivenTextField.setText("");
            accelerationGivenTextField.setEnabled(true);
            timeGivenTextField.setEnabled(true);
        }
        resetButton.setEnabled(true);
        disableAccordingly();
        removePosts();
    }//GEN-LAST:event_initialVelocityFindRadioButtonActionPerformed

    private void accelerationFindRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accelerationFindRadioButtonActionPerformed
        if (accelerationFindRadioButton.isSelected()) {
            displacementGivenTextField.setEnabled(true);
            finalVelocityGivenTextField.setEnabled(true);
            initialVelocityGivenTextField.setEnabled(true);
            accelerationGivenTextField.setEnabled(false); accelerationGivenTextField.setText("");
            timeGivenTextField.setEnabled(true);
        }
        resetButton.setEnabled(true);
        disableAccordingly();
        removePosts();
    }//GEN-LAST:event_accelerationFindRadioButtonActionPerformed

    private void timeFindRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeFindRadioButtonActionPerformed
        if (timeFindRadioButton.isSelected()) {
            displacementGivenTextField.setEnabled(true);
            finalVelocityGivenTextField.setEnabled(true);
            initialVelocityGivenTextField.setEnabled(true);
            accelerationGivenTextField.setEnabled(true);
            timeGivenTextField.setEnabled(false); timeGivenTextField.setText("");
        }
        resetButton.setEnabled(true);
        disableAccordingly();
        removePosts();
    }//GEN-LAST:event_timeFindRadioButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        
        JTextField[] givenTextFields = new JTextField[5];
        givenTextFields[0] = displacementGivenTextField;
        givenTextFields[1] = finalVelocityGivenTextField;
        givenTextFields[2] = initialVelocityGivenTextField;
        givenTextFields[3] = accelerationGivenTextField;
        givenTextFields[4] = timeGivenTextField;
        
        for ( JTextField tf : givenTextFields ) {
            tf.setText("");
        }
        
        disableAccordingly();
        removePosts();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void displacementGivenTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_displacementGivenTextFieldFocusLost
        disableAccordingly();
    }//GEN-LAST:event_displacementGivenTextFieldFocusLost

    private void finalVelocityGivenTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_finalVelocityGivenTextFieldFocusLost
        disableAccordingly();
    }//GEN-LAST:event_finalVelocityGivenTextFieldFocusLost

    private void initialVelocityGivenTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initialVelocityGivenTextFieldFocusLost
        disableAccordingly();
    }//GEN-LAST:event_initialVelocityGivenTextFieldFocusLost

    private void accelerationGivenTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accelerationGivenTextFieldFocusLost
        disableAccordingly();
    }//GEN-LAST:event_accelerationGivenTextFieldFocusLost

    private void timeGivenTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_timeGivenTextFieldFocusLost
        disableAccordingly();
    }//GEN-LAST:event_timeGivenTextFieldFocusLost

    private void solveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveButtonActionPerformed
        
        double d=0;
        double vf=0;
        double vi=0;
        double a=0;
        double t=0;
        
        if ( !selectedFindRadioButton().equals("Displacement") && !missingParameter().equals("Displacement") )
            {d = Double.parseDouble(displacementGivenTextField.getText());}
        if ( !selectedFindRadioButton().equals("Final Velocity") && !missingParameter().equals("Final Velocity") )
            {vf = Double.parseDouble(finalVelocityGivenTextField.getText());}
        if ( !selectedFindRadioButton().equals("Initial Velocity") && !missingParameter().equals("Initial Velocity") )
            {vi = Double.parseDouble(initialVelocityGivenTextField.getText());}
        if ( !selectedFindRadioButton().equals("Acceleration") && !missingParameter().equals("Acceleration") )
            {a = Double.parseDouble(accelerationGivenTextField.getText());}
        if ( !selectedFindRadioButton().equals("Time") && !missingParameter().equals("Time") )
            {t = Double.parseDouble(timeGivenTextField.getText());}
        
        switch( selectedFindRadioButton() ) {
            case "Displacement": post1("Displacement ="); postComputedDisplacementValue(d,vf,vi,a,t); break;
            case "Final Velocity": post1("Final Velocity ="); postComputedFinalVelocityValue(d,vf,vi,a,t); break;
            case "Initial Velocity": post1("Initial Velocity ="); postComputedInitialVelocityValue(d,vf,vi,a,t); break;
            case "Acceleration": post1("Acceleration ="); postComputedAccelerationValue(d,vf,vi,a,t); break;
            case "Time": post1("Time ="); postComputedTimeValue(d,vf,vi,a,t); break;
        }
        
    }//GEN-LAST:event_solveButtonActionPerformed

    private void displacementGivenTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_displacementGivenTextFieldFocusGained
        removePosts();
    }//GEN-LAST:event_displacementGivenTextFieldFocusGained

    private void finalVelocityGivenTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_finalVelocityGivenTextFieldFocusGained
        removePosts();
    }//GEN-LAST:event_finalVelocityGivenTextFieldFocusGained

    private void initialVelocityGivenTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initialVelocityGivenTextFieldFocusGained
        removePosts();
    }//GEN-LAST:event_initialVelocityGivenTextFieldFocusGained

    private void accelerationGivenTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accelerationGivenTextFieldFocusGained
        removePosts();
    }//GEN-LAST:event_accelerationGivenTextFieldFocusGained

    private void timeGivenTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_timeGivenTextFieldFocusGained
        removePosts();
    }//GEN-LAST:event_timeGivenTextFieldFocusGained

    private void instructionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructionsButtonActionPerformed
        
        String s = 
            "1. Select the quantity you want to find\n" +
            "2. Provide 3 given values\n" +
            "3. Click \"Solve\"\n" +
            "\n" +
            "See \"Documentation\" for more info";
        
        JFrame f = new JFrame("Instructions");
        JOptionPane.showMessageDialog(
                f, 
                s, 
                "Instructions", 
                JOptionPane.PLAIN_MESSAGE
        );
        
        
    }//GEN-LAST:event_instructionsButtonActionPerformed

    private void documentationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentationButtonActionPerformed
        
        if (Desktop.isDesktopSupported()) {
            try {
                File f = new File("./KES.pdf");
                Desktop.getDesktop().open(f);
            } catch (Exception e) { 
                String s = "The file \"KES.pdf\" was not found.\n" +
                           "Please contact Nathan Ullberg immediately.";
                JFrame f = new JFrame("Error");
                JOptionPane.showMessageDialog(
                f, 
                s,
                "Error", 
                JOptionPane.PLAIN_MESSAGE
        );
            }
        }
    }//GEN-LAST:event_documentationButtonActionPerformed

    private void otherInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherInfoButtonActionPerformed
        String s = "If you have any questions or comments,\n" +
                   "please contact the developer Nathan Ullberg,\n" +
                   "and he will be happy to assist you.";
        
        JFrame f = new JFrame("Other info");
        JOptionPane.showMessageDialog(
                f, 
                s, 
                "Other info", 
                JOptionPane.PLAIN_MESSAGE
        );
    }//GEN-LAST:event_otherInfoButtonActionPerformed

    private void post1(String s) {solution1Label.setText(s);}
    private void post2(String s) {solution2Label.setText(s);}
    private void post3(String s) {solution3Label.setText(s);}
    private void post4(String s) {solution4Label.setText(s);}
    
    private void removePosts() {
        solution1Label.setText("");
        solution2Label.setText("");
        solution3Label.setText("");
        solution4Label.setText("");
    }
    
    private void postComputedDisplacementValue(double d, double vf, double vi, double a, double t) {
        
        String s="Error";
        
        switch( missingParameter() ) {
            case "Final Velocity": d=vi*t+0.5*a*t*t; s=formattedNumber(d); break;
            case "Initial Velocity": d=vf*t-0.5*a*t*t; s=formattedNumber(d); break;
            case "Acceleration": d=0.5*(vf+vi)*t; s=formattedNumber(d); break;
            case "Time": d=1/(2*a)*(vf*vf-vi*vi); s=formattedNumber(d); break;
        }
        
        post2(s);
    }
    
    private void postComputedFinalVelocityValue(double d, double vf, double vi, double a, double t) {
        
        String s="Error";
        
        switch( missingParameter() ) {
            case "Displacement": vf=vi+a*t; s=formattedNumber(vf); break;
            case "Initial Velocity": vf=1/t*(d+0.5*a*t*t); s=formattedNumber(vf); break;
            case "Acceleration": vf=2*d/t-vi; s=formattedNumber(vf); break;
            case "Time": s=genSqrt(vi*vi+2*a*d); break;
        }
        
        post2(s);
    }
    
    private void postComputedInitialVelocityValue(double d, double vf, double vi, double a, double t) {
        
        String s="Error";
        
        switch( missingParameter() ) {
            case "Displacement": vi=vf-a*t; s=formattedNumber(vi); break;
            case "Final Velocity": vi=1/t*(d-0.5*a*t*t); s=formattedNumber(vi); break;
            case "Acceleration": vi=2*d/t-vf; s=formattedNumber(vi); break;
            case "Time": s=genSqrt(vf*vf-2*a*d); break;
        }
        
        post2(s);
    }
    
    private void postComputedAccelerationValue(double d, double vf, double vi, double a, double t) {

        String s="Error";
        
        switch( missingParameter() ) {
            case "Displacement": a=1/t*(vf-vi); s=formattedNumber(a); break;
            case "Final Velocity": a=2/(t*t)*(d-vi*t); s=formattedNumber(a); break;
            case "Initial Velocity": a=-2/(t*t)*(d-vf*t); s=formattedNumber(a); break;
            case "Time": a=1/(2*d)*(vf*vf-vi*vi); s=formattedNumber(a); break;
        }
        
        post2(s);
    }
    
    private void postComputedTimeValue(double d, double vf, double vi, double a, double t) {
        
        String s;
        
        switch( missingParameter() ) {
            case "Displacement": t=1/a*(vf-vi); s=formattedNumber(t); post2(s); break;
            case "Final Velocity": postSolvedQuadratic(0.5*a,vi,-d); break;
            case "Initial Velocity": postSolvedQuadratic(0.5*a,-vf,d); break;
            case "Acceleration": t=2*d/(vf+vi); s=formattedNumber(t); post2(s); break;
        }
    }
    
    private String selectedFindRadioButton() {
        
        JRadioButton[] findRadioButtons = new JRadioButton[5];
        findRadioButtons[0] = displacementFindRadioButton;
        findRadioButtons[1] = finalVelocityFindRadioButton;
        findRadioButtons[2] = initialVelocityFindRadioButton;
        findRadioButtons[3] = accelerationFindRadioButton;
        findRadioButtons[4] = timeFindRadioButton;
        
        int i=0;
        while (i < 5) {
            if ( findRadioButtons[i].isSelected() ) {
                break;
            }
            i++;
        }
        return findRadioButtons[i].getText();
    }
    
        private String missingParameter() {
        
        JRadioButton[] findRadioButtons = new JRadioButton[5];
        findRadioButtons[0] = displacementFindRadioButton;
        findRadioButtons[1] = finalVelocityFindRadioButton;
        findRadioButtons[2] = initialVelocityFindRadioButton;
        findRadioButtons[3] = accelerationFindRadioButton;
        findRadioButtons[4] = timeFindRadioButton;
        
        return findRadioButtons[missingParameter].getText();
    }
    
    private void disableAccordingly() {
        
        int numberOfInputs = 0;
        
        JRadioButton[] findRadioButtons = new JRadioButton[5];
        findRadioButtons[0] = displacementFindRadioButton;
        findRadioButtons[1] = finalVelocityFindRadioButton;
        findRadioButtons[2] = initialVelocityFindRadioButton;
        findRadioButtons[3] = accelerationFindRadioButton;
        findRadioButtons[4] = timeFindRadioButton;
        
        JTextField[] givenTextFields = new JTextField[5];
        givenTextFields[0] = displacementGivenTextField;
        givenTextFields[1] = finalVelocityGivenTextField;
        givenTextFields[2] = initialVelocityGivenTextField;
        givenTextFields[3] = accelerationGivenTextField;
        givenTextFields[4] = timeGivenTextField;
        
        for (JTextField tf : givenTextFields) {
            if (!tf.getText().equals("")) {
                numberOfInputs++;
            }
        }
        
        if (numberOfInputs == 3) {
            for (int i=0; i < 5; i++) {
                if (givenTextFields[i].isEnabled() && givenTextFields[i].getText().equals("")) {
                    givenTextFields[i].setEnabled(false);
                    missingParameter = i;
                }
            }
            solveButton.setEnabled(true);
        } else {
            solveButton.setEnabled(false);
            for ( int i=0; i < 5; i++ ) {
                if ( !findRadioButtons[i].isSelected() ) {
                    givenTextFields[i].setEnabled(true);
                }
            }
        }
    }
       
    private String genSqrt(double a) {
        
        String s;
        if (a < 0) {
            s=formattedNumber(Math.sqrt(-a))+"i";
        } else {
            s=formattedNumber(Math.sqrt(a));
        }
        
        return s;
    }
   
    private void postSolvedQuadratic(double a, double b, double c) {
        
        String s[] = new String[2]; s[0]=""; s[1]="";
        double firstSolution;
        double secondSolution;        
        double discriminant = b*b - 4*a*c;
        
        if ( discriminant < 0 ) {
            double firstTerm = -b/(2*a);
            double secondTerm = Math.sqrt(-discriminant)/(2*a);
            firstSolution = firstTerm + secondTerm;
            secondSolution = firstTerm - secondTerm;
            
            if (firstSolution == secondSolution) 
                {s[0]=formattedNumber(firstSolution)+"i";}
            else if (firstSolution != secondSolution) 
                {s[0]=(formattedNumber(firstSolution)+"i"); s[1]=formattedNumber(secondSolution);}
        } else {
            firstSolution = -b + Math.sqrt(discriminant)/(2*a);
            secondSolution = -b - Math.sqrt(discriminant)/(2*a);
            
            if (firstSolution == secondSolution)
                {s[0]=formattedNumber(firstSolution);}
            else if (firstSolution != secondSolution)
                {s[0]=formattedNumber(firstSolution); s[1]=formattedNumber(secondSolution);}
        }
        
        if (s[1]=="") {
            post2(s[0]);
        } else {
            post2(s[0]);
            post3("and");
            post4(s[1]);
        }
        
    }
    
    private String formattedNumber(double d) {
        
        String s="#.###";
        
        if ( d>1000000000 || d<-1000000000 || ( d<0.01 && d>-0.01 && d!=0 ) ) {
            s="#.###E0";
        } else {
            s="#.###";
        }
        
        DecimalFormat df = new DecimalFormat(s);
        return df.format(d);
    }
        
    private void println(String s) {
        System.out.println(s);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KinematicEquationsSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KinematicEquationsSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KinematicEquationsSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KinematicEquationsSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KinematicEquationsSolver().setVisible(true);
            }
        });
    }

    
 
    private int missingParameter;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton accelerationFindRadioButton;
    private javax.swing.JLabel accelerationGivenLabel;
    private javax.swing.JTextField accelerationGivenTextField;
    private javax.swing.JLabel appTitleLabel;
    private javax.swing.JLabel copyrightLabel;
    private javax.swing.JRadioButton displacementFindRadioButton;
    private javax.swing.JLabel displacementGivenLabel;
    private javax.swing.JTextField displacementGivenTextField;
    private javax.swing.JButton documentationButton;
    private javax.swing.JRadioButton finalVelocityFindRadioButton;
    private javax.swing.JLabel finalVelocityGivenLabel;
    private javax.swing.JTextField finalVelocityGivenTextField;
    private javax.swing.ButtonGroup findButtonGroup;
    private javax.swing.JPanel findPanel;
    private javax.swing.JLabel findTitleLabel;
    private javax.swing.JPanel givenPanel;
    private javax.swing.JLabel givenTitleLabel;
    private javax.swing.JRadioButton initialVelocityFindRadioButton;
    private javax.swing.JLabel initialVelocityGivenLabel;
    private javax.swing.JTextField initialVelocityGivenTextField;
    private javax.swing.JButton instructionsButton;
    private javax.swing.JButton otherInfoButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel solution1Label;
    private javax.swing.JLabel solution2Label;
    private javax.swing.JLabel solution3Label;
    private javax.swing.JLabel solution4Label;
    private javax.swing.JPanel solutionPanel;
    private javax.swing.JLabel solutionTitleLabel;
    private javax.swing.JButton solveButton;
    private javax.swing.JRadioButton timeFindRadioButton;
    private javax.swing.JLabel timeGivenLabel;
    private javax.swing.JTextField timeGivenTextField;
    // End of variables declaration//GEN-END:variables
}